node('master') {
  checkout scm
  stage('Update config') {
    openshift.withCluster() {
      openshift.withProject() {
        echo "Using project ${openshift.project()} in cluster with url ${openshift.cluster()}"
        openshift.apply('-f', 'manifests/')
      }
    }
  }

  stage('Source build') {
    openshift.withCluster() {
      openshift.withProject() {
        echo "Waiting for src build to complete"
        def bc = openshift.selector('buildconfig/svoyak-src')
        def newBuild = bc.startBuild()
        def status = newBuild.logs('-f').status
        openshift.failUnless(status == 0)
      }
    }
  }

  stage('Binary build') {
    openshift.withCluster() {
      openshift.withProject() {
        echo "Waiting for binary build to complete"
        def bc = openshift.selector('buildconfig/svoyak-bin')
        def newBuild = bc.startBuild()
        def status = newBuild.logs('-f').status
        openshift.failUnless(status == 0)
      }
    }
  }

  stage('Rollout deployment') {
    openshift.withCluster() {
      openshift.withProject() {
        def dc = openshift.selector('dc', "svoyak")
        dc.rollout().latest()
        dc.rollout().status()
      }
    }
  }
}
